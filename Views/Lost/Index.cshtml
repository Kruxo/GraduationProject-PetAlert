@using Microsoft.AspNetCore.Identity
@model LostIndexVm
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject UserService UserService
@{
    var isAdmin = await UserService.IsCurrentUserAdministratorAsync();
}

@{
    ViewData["Title"] = "Reported Lost Pets";
}

<style>
    body {
        background-color: #fff9f4;
    }

   h1 {
        font-size: 2.5rem;
        font-weight: bold;
        color: hsl(30, 10%, 20%);
        margin-bottom: 30px;
        text-align: center;
    }

    .container {
        max-width: 1200px;
        margin: 40px auto;
        padding: 20px;
    }

    .card {
        width: 18rem;
        background-color: #ffffff;
        border: none;
        border-radius: 16px;
        border: 1px solid #e6ccb4;
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        margin: 20px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .card img {
        border-radius: 16px 16px 0 0;
        max-height: 150px;
        object-fit: cover;
    }

    .card-title {
        color: hsl(30, 10%, 20%);
        font-size: 1.2rem;
        font-weight: bold;
        text-align: center;
        margin: 10px 0;
    }

    .card-text {
        font-size: 0.9rem;
        color: hsl(30, 10%, 40%);
        text-align: center;
        margin-bottom: 10px;
    }

    .btn-secondary {
        background-color: hsl(30, 10%, 45%);
        border: none;
        color: white;
        font-weight: bold;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

    .btn-secondary:hover {
        background-color: hsl(45, 90%, 45%);
        transform: translateY(-2px);
    }

    .btn-danger {
        background-color: hsl(30, 60%, 35%);
        border: none;
        color: white;
        font-weight: bold;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

    .btn-danger:hover {
        background-color: hsl(0, 70%, 45%);
        transform: translateY(-2px);
    }

    .alert {
        background-color: hsl(30, 20%, 90%);
        color: hsl(30, 10%, 25%);
        border-radius: 12px;
        padding: 20px;
        text-align: center;
        font-size: 1rem;
        font-weight: bold;
    }
</style>

<div class="container">
    <h1>Your reported lost pets</h1>
    @if (!Model.LostPets.Any())
    {
        <div class="alert">
            No found pets available.
        </div>
    }

    @if (SignInManager.IsSignedIn(User))
    {
        <div class="d-flex flex-wrap justify-content-center">
            @foreach (var lostPet in Model.LostPets)
            {
                var currentUserId = UserManager.GetUserId(User); //Getting current userId
                if (lostPet.UserId == currentUserId || isAdmin) //Checking if current userId matches with the owner of the card
                {
                    <div class="card">
                        <img src="@lostPet.Image" alt="@lostPet.Name" class="card-img-top">
                        <div class="card-body">
                            <h5 class="card-title">@lostPet.Name</h5>
                            <p class="card-text">@lostPet.Description</p>

                            <hr>
                                <ul class="list-unstyled card-text">
                                <li class="d-flex justify-content-between">
                                    <strong>Phone Number:</strong>
                                    <span>@lostPet.User?.PhoneNumber</span>
                                </li>
                                <li class="d-flex justify-content-between">
                                    <strong>Email:</strong>
                                    <span>@lostPet.User?.UserName</span>
                                </li>
                                <li class="d-flex justify-content-between">
                                    <strong>Pet Type:</strong>
                                    <span>@(Model.PetTypes.FirstOrDefault(t => t.Id == lostPet.PetTypeId)?.Type)</span>
                                </li>
                                <li class="d-flex justify-content-between">
                                    <strong>Chip ID:</strong>
                                    <span>@lostPet.ChipId</span>
                                </li>
                                <li class="d-flex justify-content-between">
                                    <strong>Reported on:</strong>
                                    <span>@{
                                var stockholmTimeZone = TimeZoneInfo.FindSystemTimeZoneById("Central European Standard Time");
                                var stockholmDate = TimeZoneInfo.ConvertTimeFromUtc(lostPet.Date, stockholmTimeZone);
                            }

                            <p class="card-text"> @stockholmDate.ToString("dd-MM-yyyy")</p></span>
                                </li>
                            </ul>
<hr>
                                
                            <div class="d-flex gap-2">
                                <a asp-action="Edit" asp-route-id="@lostPet.Id" class="btn btn-secondary flex-fill">Edit</a>
                                <a href="@Url.Action("Delete", "Lost", new { id = lostPet.Id })"
                                    class="btn btn-danger flex-fill">Delete</a>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    }

</div>
