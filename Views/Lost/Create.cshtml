@model LostCreateVm;

<!-- Include Leaflet and Leaflet Control Geocoder -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>


<style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #fff9f4;
        margin: 0;
        padding: 0;
    }

    .form-container {
        max-width: 600px;
        margin: 40px auto;
        background-color: #ffffff;
        border-radius: 20px;
        border: 2px solid #e6ccb4;
        padding: 30px;
    }

    .form-title {
        font-size: 26px;
        font-weight: bold;
        text-align: center;
        margin-bottom: 10px;
        color: #333333;
    }

    .form-description {
        text-align: center;
        color: #777777;
        font-size: 14px;
        margin-bottom: 20px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-control {
        width: 100%;
        padding: 12px 15px;
        font-size: 16px;
        border: 2px solid #e6ccb4;
        border-radius: 12px;
        box-sizing: border-box;
        background-color: #fff9f4;
        transition: border-color 0.3s ease, box-shadow 0.3s ease;
    }

    .form-control:focus {
        outline: none;
        border-color: #a26b3d;
        box-shadow: 0 0 8px rgba(162, 107, 61, 0.5);
        background-color: #ffffff;
    }

    .form-label {
        display: block;
        margin-bottom: 8px;
        font-weight: bold;
        color: #555555;
    }

    .btn {
        background-color: #854d20;
        color: white;
        border: none;
        padding: 12px 20px;
        font-size: 16px;
        cursor: pointer;
        border-radius: 12px;
        text-align: center;
        transition: background-color 0.3s ease, box-shadow 0.3s ease;
        width: 100%;
    }

    .btn:hover {
        background-color: #854d20;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    select.form-control {
        height: auto;
        background-color: #f9f9f9;
    }

    textarea.form-control {
        resize: none;
    }
</style>

<div class="form-container">
    <h1 class="form-title">Create New Report</h1>
    <p class="form-description">Fill out the details about the found pet</p>
    <form asp-action="Create" method="post">
        <div class="form-group">
            <label asp-for="LostPet.Name" class="form-label">Pet Name</label>
            <input asp-for="LostPet.Name" class="form-control" />
            <span asp-validation-for="LostPet.Name" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="LostPet.PetTypeId" class="form-label">Animal Type</label>
            <select asp-for="LostPet.PetTypeId" class="form-control">
                <option value="">Select animal type</option>
                @foreach (var petType in Model.PetTypes)
                {
                    <option value="@petType.Id">@petType.Type</option>
                }
            </select>
            <span asp-validation-for="LostPet.PetTypeId" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="LostPet.ChipId" class="form-label">Chip ID</label>
            <input asp-for="LostPet.ChipId" class="form-control"
                placeholder="Enter the pet's Chip ID, leave blank if the pet doesn't have one" />
            <span asp-validation-for="LostPet.ChipId" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="LostPet.Description" class="form-label">Description</label>
            <textarea asp-for="LostPet.Description" class="form-control" rows="3"
                placeholder="Provide details about the pet (color, breed, distinguishing features, etc.)"></textarea>
            <span asp-validation-for="LostPet.Description" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label class="form-label">Search Location</label>
            <input type="text" id="searchBox" class="form-control mb-2"
                placeholder="Type an address and press Enter..." />
        </div>

        <div class="mb-3">
            <label class="form-label">Select Location on Map</label>
            <div id="map" style="height: 400px; width: 100%; border: 1px solid #ccc; border-radius: 10px;"></div>
        </div>

        <div class="mb-3">
            <span asp-validation-for="LostPet.Latitude" class="text-danger" id="Latitude"></span>
            <span id="latDisplay" style="margin-top: 5px; ">Latitude: </span>
            <span asp-validation-for="LostPet.Longitude" class="text-danger" id="Longitude"></span>
            <span id="lngDisplay" style=" margin-top: 5px; ">Longitude: </span>
        </div>

        <div class="form-group">
            <label asp-for="LostPet.Image" class="form-label">Image</label>
            <input asp-for="LostPet.Image" class="form-control" placeholder="Enter an Image-URL" />
            <span asp-validation-for="LostPet.Image" class="text-danger"></span>
        </div>

        <button type="submit" class="btn">Submit Report</button>
    </form>
</div>





<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize the map centered on Stockholm
        const map = L.map('map').setView([59.3293, 18.0686], 10);

        // Add OpenStreetMap tiles
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Â© OpenStreetMap contributors',
        }).addTo(map);

        let marker = null; // Store marker reference
        // Function to update latitude and longitude fields and spans
        function updateLatLng(lat, lng) {
            document.getElementById('Latitude').value = lat;
            document.getElementById('Longitude').value = lng;

            // Update the span elements
            document.getElementById('latDisplay').textContent = `Latitude: ${lat}`;
            document.getElementById('lngDisplay').textContent = `Longitude: ${lng}`;
        }


        // Function to place a marker
        function placeMarker(lat, lng) {
            if (marker) {
                map.removeLayer(marker); // Remove previous marker
            }
            marker = L.marker([lat, lng], { draggable: true }).addTo(map);

            // Update lat/lng when marker is dragged
            marker.on('dragend', function () {
                const newLatLng = marker.getLatLng();
                updateLatLng(newLatLng.lat, newLatLng.lng);
            });

            // Update the input fields immediately
            updateLatLng(lat, lng);
        }

        // Click on the map to place marker
        map.on('click', function (e) {
            placeMarker(e.latlng.lat, e.latlng.lng);
        });

        // Search box functionality
        const searchBox = document.getElementById('searchBox');

        searchBox.addEventListener('keydown', function (e) {
            if (e.key === 'Enter') {
                e.preventDefault(); // Stop form from submitting

                const query = searchBox.value;

                // Use OpenStreetMap's Nominatim API for geocoding
                fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.length > 0) {
                            const lat = parseFloat(data[0].lat);
                            const lng = parseFloat(data[0].lon);

                            // Move map and place marker
                            map.setView([lat, lng], 14);
                            placeMarker(lat, lng);
                        } else {
                            alert("Location not found. Try a different address.");
                        }
                    })
                    .catch(error => console.error("Error fetching location:", error));
            }
        });
    });
</script>
